@page "/ServerIndex/{server}"
@using EQToolApis.DB;
@model EQToolApis.Pages.ServerIndexModel
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js" integrity="sha512-pumBsjNRGGqkPzKHndZMaAG+bir374sORyzM3uulLV14lN5LyykqNk8eEeUlUkB3U0M4FApyaHraT65ihJhDpQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> 
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tabulator-tables/5.5.0/css/tabulator.min.css" integrity="sha512-djmi8IHowkIaoT5BADAXG/BA6cCouUSu355hjOffc79mCHWeYpZKHUmjDloOOXdzRUE8x8MIICtDfpEUkFjSwg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/tabulator-tables/5.5.0/js/tabulator.min.js" integrity="sha512-wFtingxtvXm9OvjOha+XEZdedPKSMiBxHahfZin+SUm3qskOnvtL3Rljn2j5Z43sGG5PtnTlOhSswJHym6leHg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    $(document).ready(function () {
        $.get("/api/item/getall/@Model.Server", function (data, status) {
            if (data) {
                for (let i = 0; i < data.length; i++) {
                    if (data[i].t == 0) {
                        data[i].t = 'WTS';
                    } else if (data[i].t == 1) {
                        data[i].t = 'WTB';
                    } else if (data[i].t == 2) {
                        data[i].t = 'BOTH';
                    }
                    let l = data[i].l; 
                    data[i].l = new Date(l);
                }
            }

            let table = new Tabulator("#example-table",
                {
                    maxHeight: "90%",
                    layout: "fitDataStretch",
                    data: data, //set initial table data
                    columns: [
                        { title: "Type", field: "t" },
                        {
                            title: "Last Seen",
                            field: "l",
                            sorter: function (a, b, aRow, bRow, column, dir, sorterParams) {
                                //a, b - the two values being compared
                                //aRow, bRow - the row components for the values being compared (useful if you need to access additional fields in the row data for the sort)
                                //column - the column component for the column being sorted
                                //dir - the direction of the sort ("asc" or "desc")
                                //sorterParams - sorterParams object from column definition array
                                return a.getTime() - b.getTime();
                            }, 
                            formatter: function (cell, formatterParams) { 
                                return cell.getRow().getData().l.toLocaleString();
                            }
                        },  
                        {
                            title: "Item",
                            field: "n",
                            formatter: function (cell, formatterParams) {
                                let row = cell.getRow().getData();
                                let name = row.n.replaceAll(' ', '_');
                                let p99name = row.n.replaceAll(' ', '_').replaceAll('Spell:_', '');
                                let imgurl = 'https://p99-item-thumbnails.s3.amazonaws.com/' + name + '.png'
                                if (name.indexOf('Spell:_') !== -1) {
                                    imgurl = 'https://p99-item-thumbnails.s3.amazonaws.com/Spell:_Aegolism.png';
                                }
                                let p99url = 'https://wiki.project1999.com/' + p99name;
                                return `<div style="min-width:300px;"><img style="max-height:20px;" src="${imgurl}"/><a href="/ItemDetails/${row.i}">${row.n} </a>  <a href="${p99url}" target="_blank"><i class="fa fa-external-link"></i></a></div>`;
                            }
                        },
                        { title: "30d Count", field: "t30" },
                        {
                            title: "30d Avg", field: "a30",
                            formatter: function (cell, formatterParams) {
                                let price = cell.getRow().getData().a30;
                                return price ? price + "pp" : '';
                            }
                        },
                        { title: "60d Count", field: "t60" },
                        {
                            title: "60d Avg", field: "a60",
                            formatter: function (cell, formatterParams) {
                                let price = cell.getRow().getData().a60;
                                return price ? price + "pp" : '';
                            }
                        },
                        { title: "90d Count", field: "t90" },
                        {
                            title: "90d Avg", field: "a90",
                            formatter: function (cell, formatterParams) {
                                let price = cell.getRow().getData().a90;
                                return price ? price + "pp" : '';
                            }
                        },
                        { title: "6M Count", field: "t6m" },
                        {
                            title: "6M Avg", field: "a6m",
                            formatter: function (cell, formatterParams) {
                                let price = cell.getRow().getData().a6m;
                                return price ? price + "pp" : '';
                            }
                        },
                        { title: "All Count", field: "ty" },
                        {
                            title: "All Avg", field: "ay",
                            formatter: function (cell, formatterParams) {
                                let price = cell.getRow().getData().ay;
                                return price ? price + "pp" : '';
                            }
                        }
                    ],
                    progressiveRender: true, //enable progressive rendering
                    progressiveRenderSize: 500, //sets the number of rows to render per block (default = 20)
                    progressiveRenderMargin: 350,
                    rowHeight: 30,
                });
            let valueEl = document.getElementById("filter-value");
            function updateFilter() {
                table.setFilter("n", "like", valueEl.value);
            }

            document.getElementById("filter-value").addEventListener("keyup", updateFilter);
            document.getElementById("filter-clear").addEventListener("click", function () {
                valueEl.value = "";
                table.clearFilter();
            });
        });

    });
</script>

<div class="w-100 vh-100">
    <h3>@Model.Server Data  <small class="text-muted">Get <a href="https://github.com/smasherprog/EqTool" target="_blank">PigParse</a> to enhance your gameplay! Map, DPS, Spell Timer, Mob Info and more!</small></h3>
    <input id="filter-value" type="text" placeholder="Filter by Item" autofocus>
    <button id="filter-clear">Clear Filter</button>
    <div id="example-table"></div>
</div>
